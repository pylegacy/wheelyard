name: numpy-for-manylinux

on:
  push:
    paths:
      - ".github/workflows/numpy-for-manylinux.yml"
      - "recipes/numpy"
  pull_request:
    paths:
      - ".github/workflows/numpy-for-manylinux.yml"
      - "recipes/numpy"
  workflow_dispatch:

jobs:

  build:
    strategy:
      matrix:
        arch:
          [
            "x64",
            "x86",
          ]
        python-version:
          [
            "2.6",
            "3.2",
            "3.3",
          ]
      max-parallel: 3
      fail-fast: false
    runs-on: ubuntu-latest
    container: "pylegacy/${{ matrix.arch }}-python:${{ matrix.python-version }}-debian-5"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Run pre-build script
        run: |
          sh recipes/numpy/prebuild.sh
      -
        name: Run build script
        run: |
          sh recipes/numpy/build.sh
      -
        name: Upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: artifacts-build-${{ matrix.arch }}-${{ matrix.python-version }}
          path: dist

  repair:
    strategy:
      matrix:
        arch:
          [
            "x64",
            "x86",
          ]
        python-version:
          [
            "2.6",
            "3.2",
            "3.3",
          ]
      max-parallel: 3
      fail-fast: false
    needs: build
    runs-on: ubuntu-latest
    container: "pylegacy/${{ matrix.arch }}-python:3.6-debian-5"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: artifacts-build-${{ matrix.arch }}-${{ matrix.python-version }}
          path: dist
      -
        name: Run pre-build script
        run: |
          sh recipes/numpy/prebuild.sh
      -
        name: Install GCC toolchain
        run: |
          apt-get update
          apt-get install -y gcc g++ make
      -
        name: Install patchelf from source
        run: |
          pkgvers=0.9
          pkgname=patchelf
          pkgcode=${pkgname}-${pkgvers}
          cd /tmp
          wget https://releases.nixos.org/${pkgname}/${pkgcode}/${pkgcode}.tar.gz
          tar -xf ${pkgcode}.tar.gz
          rm -f ${pkgcode}.tar.gz
          cd ${pkgcode}
          ./configure
          make
          make check
          make install
          cd ..
          rm -rf ${pkgcode}
      -
        name: Install auditwheel
        run: |
          pip install "auditwheel < 4.0"
      -
        name: Repair wheel
        run: |
          python -m auditwheel repair -w wheelyard dist/*.whl
      -
        name: Upload repair artifacts
        uses: actions/upload-artifact@v1
        with:
          name: artifacts-repair-${{ matrix.arch }}-${{ matrix.python-version }}
          path: wheelyard

  test:
    strategy:
      matrix:
        arch:
          [
            "x64",
            "x86",
          ]
        python-version:
          [
            "2.6",
            "3.2",
            "3.3",
          ]
      max-parallel: 3
      fail-fast: false
    needs: repair
    runs-on: ubuntu-latest
    container: "pylegacy/${{ matrix.arch }}-python:${{ matrix.python-version }}-debian-5"
    steps:
      -
        name: Download repair artifacts
        uses: actions/download-artifact@v1
        with:
          name: artifacts-repair-${{ matrix.arch }}-${{ matrix.python-version }}
          path: wheelyard
      -
        name: Install package
        run: |
          pip install wheelyard/*-manylinux1*.whl
      -
        name: Test package
        run: |
          python -c "import numpy as np"
